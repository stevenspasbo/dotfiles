#compdef okta2aws

local -a _cmds
_cmds=(
  'help:Show help.'
  'configure:Configure a new IDP account.'
  'login:Login to a SAML 2.0 IDP and convert the SAML assertion to an STS token.'
  'exec:Exec the supplied command with env vars from STS token.'
)

local -a _flags
_flags=(
  '--help[Show context-sensitive help]'
  '--version[Show application version.]'
  '--verbose[Enable verbose logging]'
  '-a[The name of the configured IDP account]' '--idp-account=[The name of the configured IDP account]'
  '--mfa=[The configured IDP provider]'
  '-s[Skip verification of server certificate.]' '--skip-verify[Skip verification of server certificate.]'
  '--username[The username used to login.]:Users:whoami'
  '--role[The ARN of the role to assume.]'
  '--aws-urn[The URN used by SAML when you login.]'
  '--skip-prompt[Skip prompting for parameters during login.]'
)

__okta2aws_help() {
  _describe -t commands "help" _cmds
}

local curcontext="$curcontext" state line
local -A opt_args

_arguments -C \
           ':command:->command' \
           '*::options:->options'

case $state in
  (command)
    _describe -t commands "cmds" _cmds
    _arguments $_flags
    return
    ;;
  (options)
    case $line[1] in
      (help)
        _arguments ':feature:__okta2aws_help'
        ;;
    esac
    ;;
esac
