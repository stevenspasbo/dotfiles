#! /bin/sh

#-------------------------------------------------------------
#           Author: Steven Spasbo
#-------------------------------------------------------------
if [[ $SHELL == *zsh ]]; then
  export RC_FILE="$HOME/.zshrc"
else
  export RC_FILE="$HOME/.bashrc"
fi

#-------------------------------------------------------------
# Command alts
#-------------------------------------------------------------
alias grep='grep --color=auto'
alias fgrep='fgrep --color'
alias egrep='egrep --color'

#alias ls='ls -h'
if [[ $OSTYPE =~ ^darwin ]]; then
  alias ls="command ls -Gh"
else
  alias ls="command ls -h --color"
fi
alias ll="ls -laF"
alias l='ls -CF'

alias df='df -h'
alias du='du -h -c'

alias ping='ping -c 5'

#-------------------------------------------------------------
# System stuff
#-------------------------------------------------------------
alias reload='clear && source $RC_FILE'
alias hist='history | grep'
alias cls='clear'
alias cal='cal | grep --before-context 6 --after-context 6 --color -e " $(date +%e)" -e "^$(date +%e)"'

alias cloc='cloc --force-lang-def=$HOME/cloc-def'

alias emacs='emacs -nw'

#-------------------------------------------------------------
# Shortcuts and directory stuff
#-------------------------------------------------------------
alias ..='cd ..'
alias ...='cd ../..'
alias downloads='cd ~/Downloads'
alias desktop='cd ~/Desktop'

#-------------------------------------------------------------
# Personalized shortcuts
#-------------------------------------------------------------
alias nethack='telnet nethack.alt.org'

#-------------------------------------------------------------
# Functions
#-------------------------------------------------------------

#-------------------------------------------------------------
# HTTP
#-------------------------------------------------------------
alias get='curl -s -XGET'
alias post='curl -s -XPOST'
alias put='curl -s -XPUT'
alias delete='curl -s -XDELETE'

function sha1-string () {
    echo -n "Password: "
    read -s password
    echo -n $password | openssl sha1
}

function setjdk() {
  if [ $# -ne 0 ]; then
    removeFromPath '/System/Library/Frameworks/JavaVM.framework/Home/bin'
    if [ -n "${JAVA_HOME+x}" ]; then
      removeFromPath $JAVA_HOME
    fi
    export JAVA_HOME=`/usr/libexec/java_home -v $@`
    export PATH=$JAVA_HOME/bin:$PATH
  fi
}
function removeFromPath() {
  export PATH=$(echo $PATH | sed -E -e "s;:$1;;" -e "s;$1:?;;")
}

function cleanpath() {
  if [ -n "$PATH" ]; then
    old_PATH=$PATH:; PATH=
    while [ -n "$old_PATH" ]; do
      x=${old_PATH%%:*}       # the first remaining entry
      case $PATH: in
        *:"$x":*) ;;         # already there
        *) PATH=$PATH:$x;;    # not there yet
      esac
      old_PATH=${old_PATH#*:}
    done
    PATH=${PATH#:}
    unset old_PATH x
  fi
}
cleanpath

#-------------------------------------------------------------
# Work
#-------------------------------------------------------------

ssh-suv() {
    scp-profile $1
    echo "ssh to $1"
    ssh $1 -A
}

scp-profile() {
    echo "Sending .bash_profile to ~/ on $1"
    scp $AUTO/wats/BashScript/.bash_profile root@$1:~/.bash_profile
    echo "Sending my.wats.properties"
    scp ~/.my.wats.properties root@$1:/data/workdaydevqa/suv/suvwats/my.wats.properties
    echo "Done, logging in"
}

function show_colors {
    for i in {0..255}; do
	printf "\x1b[38;5;${i}mcolour${i} "
    done
    echo "\n"
}
