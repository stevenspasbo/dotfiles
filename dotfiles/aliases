#! /bin/sh

#-------------------------------------------------------------
#           Author: Steven Spasbo
#-------------------------------------------------------------
if [[ $SHELL == *zsh ]]; then
  export RC_FILE="$HOME/.zshrc"
else
  export RC_FILE="$HOME/.bashrc"
fi

#-------------------------------------------------------------
# Command alts
#-------------------------------------------------------------

#alias ls='ls -h'
# if [[ $OSTYPE =~ ^darwin ]]; then
#   alias ls="command ls -Gh"
# else
#   alias ls="command ls -h --color"
# fi
# # alias ll="ls -laF"

# Detect which `ls` flavor is in use
if ls --color > /dev/null 2>&1; then # GNU `ls`
  colorflag="--color"
  export LS_COLORS='no=00:fi=00:di=01;31:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.ogg=01;35:*.mp3=01;35:*.wav=01;35:'
else # macOS `ls`
  colorflag="-G"
  export LSCOLORS='BxBxhxDxfxhxhxhxhxcxcx'
fi

# List all files colorized in long format
alias l="ls -lF ${colorflag}"

# List all files colorized in long format, including dot files
alias la="ls -laF ${colorflag}"

# List only directories
alias lsd="ls -lF ${colorflag} | grep --color=never '^d'"

# Always use color output for `ls`
alias ls="command ls ${colorflag}"

alias ll='ls -lahG'

# Always enable colored `grep` output
# Note: `GREP_OPTIONS="--color=auto"` is deprecated, hence the alias usage.
alias grep='grep --color=always'
alias fgrep='fgrep --color=always'
alias egrep='egrep --color=always'

alias df='df -h'
alias du='du -h -c'

alias ping='ping -c 5'

alias branches="git branch -a | grep -i "

#-------------------------------------------------------------
# System stuff
#-------------------------------------------------------------
alias reload='clear && source $RC_FILE'
alias hist='history | grep -i $*'
alias cls='clear'
alias cal='cal | grep --before-context 6 --after-context 6 --color -e " $(date +%e)" -e "^$(date +%e)"'

alias cloc='cloc --force-lang-def=$HOME/cloc-def'

alias emacs='emacs -nw'

#-------------------------------------------------------------
# Shortcuts and directory stuff
#-------------------------------------------------------------
alias ..='cd ..'
alias ...='cd ../..'
alias downloads='cd ~/Downloads'
alias desktop='cd ~/Desktop'

#-------------------------------------------------------------
# Personalized shortcuts
#-------------------------------------------------------------
alias nethack='telnet nethack.alt.org'

#-------------------------------------------------------------
# Functions
#-------------------------------------------------------------

#-------------------------------------------------------------
# HTTP
#-------------------------------------------------------------
alias get='curl -s -XGET'
alias post='curl -s -XPOST'
alias put='curl -s -XPUT'
alias delete='curl -s -XDELETE'

alias sniff="sudo ngrep -d 'en0' -t '^(GET|POST) ' 'tcp and port 80'"
alias httpdump="sudo tcpdump -i en1 -n -s 0 -w - | grep -a -o -E \"Host\: .*|GET \/.*\""

#-------------------------------------------------------------
# Functions
#-------------------------------------------------------------
# Extract
# https://github.com/xvoland/Extract
function extract {
 if [ -z "$1" ]; then
    # display usage if no parameters given
    echo "Usage: extract <path/file_name>.<zip|rar|bz2|gz|tar|tbz2|tgz|Z|7z|xz|ex|tar.bz2|tar.gz|tar.xz>"
 else
    if [ -f "$1" ] ; then
        NAME=${1%.*}
        #mkdir $NAME && cd $NAME
        case "$1" in
          *.tar.bz2)   tar xvjf ./"$1"    ;;
          *.tar.gz)    tar xvzf ./"$1"    ;;
          *.tar.xz)    tar xvJf ./"$1"    ;;
          *.lzma)      unlzma ./"$1"      ;;
          *.bz2)       bunzip2 ./"$1"     ;;
          *.rar)       unrar x -ad ./"$1" ;;
          *.gz)        gunzip ./"$1"      ;;
          *.tar)       tar xvf ./"$1"     ;;
          *.tbz2)      tar xvjf ./"$1"    ;;
          *.tgz)       tar xvzf ./"$1"    ;;
          *.zip)       unzip ./"$1"       ;;
          *.Z)         uncompress ./"$1"  ;;
          *.7z)        7z x ./"$1"        ;;
          *.xz)        unxz ./"$1"        ;;
          *.exe)       cabextract ./"$1"  ;;
          *)           echo "extract: '$1' - unknown archive method" ;;
        esac
    else
        echo "'$1' - file does not exist"
    fi
fi
}

function sha1-string () {
    echo -n "Password: "
    read -s password
    echo -n $password | openssl sha1
}

function setjdk() {
  if [ $# -ne 0 ]; then
    removeFromPath '/System/Library/Frameworks/JavaVM.framework/Home/bin'
    if [ -n "${JAVA_HOME+x}" ]; then
      removeFromPath $JAVA_HOME
    fi
    export JAVA_HOME=`/usr/libexec/java_home -v $@`
    export PATH=$JAVA_HOME/bin:$PATH
  fi
}
function removeFromPath() {
  export PATH=$(echo $PATH | sed -E -e "s;:$1;;" -e "s;$1:?;;")
}

function cleanpath() {
  if [ -n "$PATH" ]; then
    old_PATH=$PATH:; PATH=
    while [ -n "$old_PATH" ]; do
      x=${old_PATH%%:*}       # the first remaining entry
      case $PATH: in
        *:"$x":*) ;;         # already there
        *) PATH=$PATH:$x;;    # not there yet
      esac
      old_PATH=${old_PATH#*:}
    done
    PATH=${PATH#:}
    unset old_PATH x
  fi
}
cleanpath

#-------------------------------------------------------------
# Work
#-------------------------------------------------------------

ssh-suv() {
    scp-profile $1
    echo "ssh to $1"
    ssh $1 -A
}

scp-profile() {
    echo "Sending .bash_profile to ~/ on $1"
    scp $AUTO/wats/BashScript/.bash_profile root@$1:~/.bash_profile
    echo "Sending my.wats.properties"
    scp ~/.my.wats.properties root@$1:/data/workdaydevqa/suv/suvwats/my.wats.properties
    echo "Done, logging in"
}

