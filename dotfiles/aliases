#! /bin/sh

#-------------------------------------------------------------
#           Author: Steven Spasbo
#-------------------------------------------------------------
if [[ $SHELL == *zsh ]]; then
  export RC_FILE="$HOME/.zshrc"
else
  export RC_FILE="$HOME/.bashrc"
fi

export HOMEBREW_CASK_OPTS="--appdir=/Applications"

#-------------------------------------------------------------
# grep stuff
#-------------------------------------------------------------
alias grep='grep --color'
alias fgrep='fgrep --color'
alias egrep='egrep --color'

#-------------------------------------------------------------
# ls stuff
#-------------------------------------------------------------
alias ls='ls -h'
alias ll="ls -la"
alias l='ls -CF'

#-------------------------------------------------------------
# System stuff
#-------------------------------------------------------------
alias reload='clear && source $RC_FILE'
alias hist='history | grep'
alias cls='clear'
alias cal='cal | grep --before-context 6 --after-context 6 --color -e " $(date +%e)" -e "^$(date +%e)"'

alias ping='ping -c 5'


#-------------------------------------------------------------
# Shortcuts and directory stuff
#-------------------------------------------------------------
alias ..='cd ..'
alias ...='cd ../..'
alias home='cd ~/'
alias downloads='cd ~/Downloads'
alias desktop='cd ~/Desktop'

#-------------------------------------------------------------
# Personalized shortcuts
#-------------------------------------------------------------
alias ru="cd /Development/Ruby"
alias py="cd /Development/Python"
alias ja="cd /Development/Java"

alias chbash="$EDITOR ~/.bashrc"
alias chvim="$EDITOR ~/.vimrc"

#-------------------------------------------------------------
# Functions
#-------------------------------------------------------------

function setjdk() {
  if [ $# -ne 0 ]; then
    removeFromPath '/System/Library/Frameworks/JavaVM.framework/Home/bin'
    if [ -n "${JAVA_HOME+x}" ]; then
      removeFromPath $JAVA_HOME
    fi
    export JAVA_HOME=`/usr/libexec/java_home -v $@`
    export PATH=$JAVA_HOME/bin:$PATH
  fi
}
function removeFromPath() {
  export PATH=$(echo $PATH | sed -E -e "s;:$1;;" -e "s;$1:?;;")
}

function cleanpath() {
  if [ -n "$PATH" ]; then
    old_PATH=$PATH:; PATH=
    while [ -n "$old_PATH" ]; do
      x=${old_PATH%%:*}       # the first remaining entry
      case $PATH: in
        *:"$x":*) ;;         # already there
        *) PATH=$PATH:$x;;    # not there yet
      esac
      old_PATH=${old_PATH#*:}
    done
    PATH=${PATH#:}
    unset old_PATH x
  fi
}
cleanpath

#-------------------------------------------------------------
# Device specific functions
#-------------------------------------------------------------
# Personal laptop
#if [ $(hostname) == "h4xx0rmaxx0rzzzz.local" ]; then
# Uncomment when you have something.
#fi

# Work laptop
if [[ "$(hostname)" == "SSPASBO-03" ]]; then
  setjdk 1.7

  function syncpdfs() {
    rsync -vr --size-only --progress /Users/steven.spasbo/Documents/PDFs steven@stevenspasbo.com:/home/steven/public_html/
  }

  repos=( "/Work/SVN/auto" "/Work/SVN/tools/wats" "/Work/SVN/oms")
  updaterepos() {
  for i in "${repos[@]}"
  do
    echo "Updating $i"
    svn up $i
    echo ""
  done
  }

  AUTO="/Work/SVN/auto-trunk"
  ssh-suv() {
    scp-profile $1
    echo "ssh to $1"
    ssh $1 -A
  }

  scp-profile() {
    echo "Sending .bash_profile to ~/ on $1"
    scp $AUTO/wats/BashScript/.bash_profile root@$1:~/.bash_profile
    echo "Sending my.wats.properties"
    scp ~/.my.wats.properties root@$1:/data/workdaydevqa/suv/suvwats/my.wats.properties
    echo "Done, logging in"
  }

  getlogs() {
  WATSLOGS="/Work/Logs/WATS"
  CURRENTDIRECTORY=`pwd`
  DATE="$(date +%Y-%m-%d-%H_%M_%S)"
  REMOTELOGS="/data/workdaydevqa/suv/suvwats/logs"
  if [ -z $1 ]; then
    echo "Please enter an SUV"
  else
    if [ -e $WATSLOGS ]; then
      echo "Getting logs"
      cd $WATSLOGS && mkdir $DATE && cd $DATE
      scp root@$1:"$REMOTELOGS/*.html $REMOTELOGS/*.log $REMOTELOGS/*.xml" ./
      echo "Done" && cd $CURRENTDIRECTORY
    fi
  fi
  }
fi

function show_colors {
    for i in {0..255}; do
	printf "\x1b[38;5;${i}mcolour${i} "
    done
    echo "\n"
}
